(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{501:function(t,a,s){"use strict";s.r(a);var _=s(44),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"内存优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存优化"}},[t._v("#")]),t._v(" 内存优化"),s("img",{attrs:{src:"https://www.cnblogs.com/skins/custom/images/logo.gif",alt:"返回主页"}})]),t._v(" "),s("h4",{attrs:{id:"_1-static-关键字修饰的成员变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-static-关键字修饰的成员变量"}},[t._v("#")]),t._v(" 1. static 关键字修饰的成员变量")]),t._v(" "),s("p",[t._v("核心点：被static修饰过的成员变量的生命周期 = 应用程序的生命周期。")]),t._v(" "),s("p",[t._v("泄漏原因：若被static修饰的成员变量引用短生命周期的实例，则容易出现该成员变量的生命周期 > 引用实例生命周期的情况，当引用实例需结束生命周期销毁时，会因静态变量的持有而无法被回收，从而出现内存泄露。")]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("p",[t._v("a. 尽量避免static成员变量引用资源消耗过多的实例（若需引用Context，则尽量使用Application的Context）。")]),t._v(" "),s("p",[t._v("b. 使用弱引用WeakReference代替强引用持有实例。")]),t._v(" "),s("h4",{attrs:{id:"经典案例-》单例模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#经典案例-》单例模式"}},[t._v("#")]),t._v(" 经典案例 ==》单例模式")]),t._v(" "),s("p",[t._v("核心点：单例模式 其生命周期的长度 = 应用程序的生命周期")]),t._v(" "),s("p",[t._v("泄漏原因：若1个对象已不需再使用 而单例对象还持有该对象的引用，那么该对象将不能被正常回收 从而 导致内存泄漏")]),t._v(" "),s("p",[t._v("解决方案：单例模式引用的对象的生命周期 = 应用的生命周期。 或者编写代码保证在合适的时机释放资源。")]),t._v(" "),s("h4",{attrs:{id:"_2-非静态内部类-匿名类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-非静态内部类-匿名类"}},[t._v("#")]),t._v(" 2. 非静态内部类/匿名类")]),t._v(" "),s("p",[t._v("核心点：非静态内部类默认持有外部类的引用，可能会导致外部类对象无法释放，造成内存泄漏。")]),t._v(" "),s("p",[t._v("解决方案：使用静态内部类。")]),t._v(" "),s("h4",{attrs:{id:"经典案例-》runnable、asynctask、thread、handler-等类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#经典案例-》runnable、asynctask、thread、handler-等类"}},[t._v("#")]),t._v(" 经典案例 ==》Runnable、AsyncTask、Thread、Handler 等类")]),t._v(" "),s("h4",{attrs:{id:"_3-资源使用后未关闭"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-资源使用后未关闭"}},[t._v("#")]),t._v(" 3. 资源使用后未关闭")]),t._v(" "),s("p",[t._v("泄露原因：对于资源的使用（如 广播"),s("code",[t._v("BraodcastReceiver")]),t._v("、文件流"),s("code",[t._v("File")]),t._v("、数据库游标"),s("code",[t._v("Cursor")]),t._v("、），若在"),s("code",[t._v("Activity")]),t._v("销毁时没有及时关闭或注销这些资源，则这些资源将不会被回收，从而造成内存泄漏。")]),t._v(" "),s("p",[t._v("解决方案：在"),s("code",[t._v("Activity")]),t._v("销毁时 及时关闭 / 注销资源")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img2018.cnblogs.com/blog/682616/201910/682616-20191030205240440-2084543170.png",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"_2-内存抖动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-内存抖动"}},[t._v("#")]),t._v(" 2. 内存抖动")]),t._v(" "),s("p",[t._v("核心原因：频繁创建大量、临时的小对象。")]),t._v(" "),s("p",[t._v("优化方案：避免创建大量、临时的小对象。")])])}),[],!1,null,null,null);a.default=r.exports}}]);