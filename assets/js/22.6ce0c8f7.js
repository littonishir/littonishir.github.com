(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{478:function(t,a,s){"use strict";s.r(a);var n=s(44),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"android-屏幕适配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#android-屏幕适配"}},[t._v("#")]),t._v(" Android 屏幕适配")]),t._v(" "),s("p",[s("strong",[t._v("适配方案")])]),t._v(" "),s("ol",[s("li",[t._v("图片适配 ：多套图")]),t._v(" "),s("li",[t._v("dimens适配 ： 比如value-1280x720 需要写多个文件，去适配市面上主流的机型")]),t._v(" "),s("li",[t._v("布局文件适配 ：比如layout-1280x720")]),t._v(" "),s("li",[t._v("权重适配 ：layout_weight")]),t._v(" "),s("li",[t._v("smallestWidth")]),t._v(" "),s("li",[t._v("今日头条屏幕适配方案")]),t._v(" "),s("li",[t._v("AndroidAutoSize")])]),t._v(" "),s("p",[s("strong",[t._v("知识储备")])]),t._v(" "),s("p",[t._v("android中的dp在渲染前会将dp转为px，计算公式：")]),t._v(" "),s("ul",[s("li",[t._v("px = density * dp;\t//px : 像素点")]),t._v(" "),s("li",[t._v("density = dpi / 160;     //density : 密度")]),t._v(" "),s("li",[t._v("px = dp * (dpi / 160);  //dpi : 分辨率 | dp : Android中的相对大小")])]),t._v(" "),s("h2",{attrs:{id:"smallestwidth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#smallestwidth"}},[t._v("#")]),t._v(" smallestWidth")]),t._v(" "),s("p",[t._v("英译：最小宽度")]),t._v(" "),s("p",[t._v("原理：将px转化成dp 例如：1920*1080  480dpi   dp =px/(dpi/160) 即 1080/(480/160) = 360 最小宽度基准值 定为 360，那这个方案就会理解为您想把所有设备的屏幕宽度都分为 360 份，方案会帮您在 dimens.xml 文件中生成 1 到 360 的 dimens 引用")]),t._v(" "),s("p",[t._v("开发者先在项目中根据主流屏幕的"),s("strong",[t._v("最小宽度 (smallestWidth)")]),t._v(" 生成一系列dimens.xml文件。当项目运行到设备上时系，统会根据当前设备屏幕的 最小宽度  去匹配对应的dimens.xml文件。若是找不到系统只会寻找小于当前设备最小宽度的dimens.xml文件。")]),t._v(" "),s("p",[t._v("优点：稳定，在运行过程中极少会出现安全隐患，适配范围也可控，不会产生其他未知的影响。")]),t._v(" "),s("p",[t._v("缺点：大量的dimens.xml文件会增加Apk的体积")]),t._v(" "),s("h2",{attrs:{id:"今日头条屏幕适配方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#今日头条屏幕适配方案"}},[t._v("#")]),t._v(" 今日头条屏幕适配方案")]),t._v(" "),s("p",[s("strong",[t._v("关键公式 px = density * dp;")])]),t._v(" "),s("p",[t._v("原理：(设备真实px通过DisplayMetrics对象获取) /（根据设计图的dp宽度）=  density(密度)  通过动态修改density实现对不同分辨率的手机的屏幕适配，例如：360*480 设计图位360dp宽度 那么以宽度适配时 density =1 ，那么当它运行在1080*1920的设备上 density =3       px = density*dp 从而达到适配的效果")]),t._v(" "),s("p",[t._v("优点：降低开发成本、提高开发效率，使用上更灵活。")]),t._v(" "),s("p",[t._v("缺点：一刀切的将整个项目进行适配，但是非我们项目自身设计的控件，它们的设计图尺寸并不会和我们项目自身的设计图尺寸一样。当三方库控件的设计图尺寸和和我们项目自身的设计图尺寸差距非常大时，这个问题就越严重。")]),t._v(" "),s("h2",{attrs:{id:"androidautosize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#androidautosize"}},[t._v("#")]),t._v(" AndroidAutoSize")]),t._v(" "),s("p",[t._v("今日头条屏幕适配方案终极版，既提高了开发效率，使用上更灵活，也解决了第三方库控件尺寸无法适配的问题，我们可以通过关闭主单位开启副单位的方式解决，开启愉快的屏幕适配之旅吧。")]),t._v(" "),s("p",[t._v("1.添加依赖")]),t._v(" "),s("div",{staticClass:"language-gradle extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" implementation 'me.jessyan:autosize:1.1.2'\n")])])]),s("p",[t._v("2.在AndroidManifest中初始化，宽高直接填写设计图px(像素)值即可")]),t._v(" "),s("div",{staticClass:"language-AndroidManifest extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    < application >  \n    \t...\n        < meta-data \n            android ：name = “ design_width_in_dp ”\n             android ：value = “ 360 ” />\n        < meta-data \n            android ：name = “ design_height_in_dp ”\n             android ：value = “ 640 ” />  \n\t\t...\n     </ application > \n")])])]),s("p",[t._v("3.Application.onCreate()方法中进行初始化配置")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoSizeConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUnitsManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSupportDP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSupportSubunits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Subunits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://github.com/JessYanCoding/AndroidAutoSize",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细使用细节点击获取"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);